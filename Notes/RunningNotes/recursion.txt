Best recursion example is Factorial
n! = n * (n-1)!

1. Function calls itself multiple times
2. It should terminate at the base case
How to identify a base case -
    At base case, the problem gets solved without recursion
Solution to a problem is based on solving smaller instances of the same problem.

Recursive vs Iterative
Iterative iterates in a For Loop and arrives at the solution
Recursive calls the same function again and again


The tail recursive functions are better than non tail recursive functions
   as tail-recursion can be optimized by compiler because:,
   since the recursive call is the last statement, there is nothing left to do in the current function,
   so there is no need to save the current functionâ€™s stack frame.
   GiveAway - Convert non tail functions to tail recursive functions for further optimisation


https://www.python-course.eu/recursive_functions.php
https://bhavaniravi.com/blog/caching-in-python
#!/bin/python3

import math
import os
import random
import re
import sys


#
# Complete the 'counts' function below.
#
# The function is expected to return an INTEGER_ARRAY.
# The function accepts following parameters:
#  1. INTEGER_ARRAY teamA
#  2. INTEGER_ARRAY teamB
#
# teamA empty or teamB empty
# teamB length to be matched with o/p
# 
def counts(teamA, teamB):
    # Write your code here
    # Sort teamA
    res = []
    teamA.sort()
    for each in teamB:
        ptr = findElemPtr(teamA, each)
        res.append(len(teamA[:ptr]))
    return res
    
def findElemPtr(teamA, item):
    # [1,1,1,1]
    # [1,1]
    # [1,1]
    a = len(teamA)
    right_ptr = a - 1
    left_ptr = 0
    
    # [1,2,3,5]
    # [2,4]
    ref_ptr = None
    while left_ptr < right_ptr:
        mid_ptr = (right_ptr+left_ptr)//2
        mid = teamA[mid_ptr]
        if item < mid:
            right_ptr = mid_ptr + 1
        elif item > mid:
            left_ptr = mid_ptr
        else:
            ref_ptr = mid_ptr
            return ref_ptr
    if not ref_ptr:
        if item > teamA[right_ptr]:
            ref_ptr = right_ptr
        if item < teamA[left_ptr]:
            ref_ptr = left_ptr
    return ref_ptr
    
            
            
            
        
        
    


if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    teamA_count = int(input().strip())

    teamA = []

    for _ in range(teamA_count):
        teamA_item = int(input().strip())
        teamA.append(teamA_item)

    teamB_count = int(input().strip())

    teamB = []

    for _ in range(teamB_count):
        teamB_item = int(input().strip())
        teamB.append(teamB_item)

    result = counts(teamA, teamB)

    fptr.write('\n'.join(map(str, result)))
    fptr.write('\n')

    fptr.close()